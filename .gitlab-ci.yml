stages:
  - deploy

.ssh-base:
  image: docker:20.10.7
  before_script:
    - apk add --no-cache docker-compose rsync
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 777 ~/.ssh/id_rsa
    - chmod 777 ./selenoid
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

### Deployment jobs ###

#selenoid-210:
#  stage: deploy
#  extends: .ssh-base
#  variables:
#    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_210
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "merge_request_event"'
#      when: never
#    - if: '$CI_PIPELINE_SOURCE == "push"'
#      when: manual
#  script:
#    - scp -r -o StrictHostKeyChecking=no ./selenoid $SSH_USER@$SSH_MACHINE_210:/root
#    - ssh $SSH_USER@$SSH_MACHINE_210 "export LIMIT=12 && cd selenoid && docker-compose down && docker-compose rm -f && docker-compose up -d"
#    - ssh $SSH_USER@$SSH_MACHINE_210 "cat /root/selenoid/config/browsers.json  | jq -r '..|.image?|strings' | xargs -I{} docker pull {}"

selenoid-62:
  stage: deploy
  extends: .ssh-base
  variables:
    SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY_62
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
  script:
    - echo "$SSH_PRIVATE_KEY"
    - echo "$SSH_USER"
    - echo "$SSH_MACHINE_62"
    - ssh $SSH_USER@$SSH_MACHINE_62 "echo "hello!""
    - scp -r ./selenoid $SSH_USER@$SSH_MACHINE_62:/root
    - sudo scp -r -o StrictHostKeyChecking=no ./selenoid $SSH_USER@$SSH_MACHINE_62:/root
    - ssh $SSH_USER@$SSH_MACHINE_62 "export LIMIT=2 && cd selenoid && docker-compose down && docker-compose rm -f && docker-compose up -d"
    - ssh $SSH_USER@$SSH_MACHINE_62 "cat /root/selenoid/config/browsers.json  | jq -r '..|.image?|strings' | xargs -I{} docker pull {}"